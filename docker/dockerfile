#
# https://docs.docker.com/engine/installation/linux/fedora/\
# http://developers.redhat.com/blog/2014/05/15/practical-introduction-to-docker-containers/
#

#
# System
# 
# systemctl start docker
# systemctl enable docker.service
# systemctl start docker.service

# sudo service docker start
# docker daemon
# sudo docker info


#
# Controlling containers
# docker --help
# docker ps  -a -> list running and sleeping docker
# sudo docker run -it centos -> start the image
# sudo docker run -it centos:6 -> start the image
# Ctrl -p  Ctrl -q -> detach the docker
# docker attach e3a3651e9b58 -> attach, address from docker ps
# Start a new container
$ JOB=$(docker run -d ubuntu /bin/sh -c "while true; do echo Hello world; sleep 1; done")
# Stop the container
$ docker stop $JOB
# Start the container
$ docker start $JOB
# Restart the container
$ docker restart $JOB
# SIGKILL a container
$ docker kill $JOB
# Remove a container
$ docker stop $JOB # Container must be stopped to remove it
$ docker rm $JOB
 
#
# images_neuroimages
We are building a interactive simple image for the construction of the tools (Matlab, FSL, ...). This image will mount NFS directories and those directoties will be saved and tested on different plateforms. 

# create the images
cd images_neuroimaging/
docker build -f Dockerfile --tag="imaging_core:01" .
docker images 
# it will show 
REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
imaging_core        01                  4882bbe2a8f6        22 minutes ago      1.011 GB


# mounting external disk
we need to mount R drives and the local image of the neuro-image software (FSL, SPM, ANTs)  centralized the software in 
sudo dbus-uuidgen --ensure=/etc/machine-id


mkdir /mnt/neuroimaging_CentOS7/

JOB=$(docker run -d  -it --name  Neuro  -v /mnt/neuroimaging_CentOS7:/mnt/neuroimaging  imaging_core:01)
docker attach $JOB

JOB=$( sudo docker run -it  --name  Neuro  \
    --user=$USER \
    --env="DISPLAY" \
    --workdir="/home/$USER" \
    --volume="/mnt/neuroimaging_CentOS7:/mnt/neuroimaging" \
    --volume="/mnt/macdata:/mnt/macdata" \
    --volume="/home/$USER:/home/$USER" \
    --volume="/etc/group:/etc/group:ro" \
    --volume="/etc/passwd:/etc/passwd:ro" \
    --volume="/etc/shadow:/etc/shadow:ro" \
    --volume="/etc/sudoers.d:/etc/sudoers.d:ro" \
    --volume="/etc/machine-id:/etc/machine-id:ro" \
    --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
    imaging_core:01 )


JOB=$( sudo docker run -it  --name  Neuro  \
    --user=$USER \
    --env="DISPLAY" \
    --workdir="/home/$USER" \
    --volume="/mnt/neuroimaging_CentOS7:/mnt/neuroimaging" \
    --volume="/mnt/macdata:/mnt/macdata" \
    --volume="/mnt/home/$USER:/home/$USER" \
    --volume="/etc/machine-id:/etc/machine-id:ro" \
    --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
    imaging_core:01 )

#Instances
JOB=$( sudo docker run -it --rm --name  Neuro  \
    --user=$USER \
    --env="DISPLAY" \
    --net=host \
    --workdir="/home/$USER" \
    --volume="$HOME/.Xauthority:/home/ycobigo/.Xauthority" \
    --volume="/mnt/neuroimaging/neuroimaging_CentOS7:/mnt/neuroimaging:ro" \
    --volume="/mnt/macdata:/mnt/macdata" \
    --volume="/mnt/images:/mnt/images" \
    --volume="/mnt/data/home/$USER:/home/$USER" \
    --volume="/etc/group:/etc/group:ro" \
    --volume="/etc/passwd:/etc/passwd:ro" \
    --volume="/etc/shadow:/etc/shadow:ro" \
    --volume="/etc/sudoers.d:/etc/sudoers.d:ro" \
    --volume="/etc/machine-id:/etc/machine-id:ro" \
    --volume="/tmp/.X11-unix/X0:/tmp/.X11-unix/X0:rw" \
    --volume="/mnt/data/tmp:/tmp" \
    --volume="/usr/local/MATLAB:/usr/local/MATLAB" \
    imaging_core:01 )

#10.36.2.41
JOB=$( sudo docker run -it --rm --name  Check  \
    --user=$USER \
    --env="DISPLAY" \
    --net=host \
    --workdir="/home/$USER" \
    --volume="$HOME/.Xauthority:/home/$USER/.Xauthority" \
    --volume="/mnt/scratch/neuroimaging_CentOS7:/mnt/neuroimaging:ro" \
    --volume="/mnt/macdata:/mnt/macdata" \
    --volume="/mnt/images:/mnt/images" \
    --volume="/mnt/scratch/home/$USER:/home/$USER" \
    --volume="/etc/machine-id:/etc/machine-id:ro" \
    --volume="/tmp/.X11-unix/X0:/tmp/.X11-unix/X0:rw" \
    --volume="/mnt/scratch/tmp:/tmp" \
    --volume="/usr/local/MATLAB:/usr/local/MATLAB" \
    imaging_core:01 )

#
# Singularity
#
singularity shell --shell /bin/bash -B /mnt/coredata/neuroimaging_CentOS7/:/mnt/neuroimaging /mnt/coredata/Singularity/Centos7-imaging_core_1.0.img

#
#
# On the image
#
#
mkdir /mnt/neuroimaging/install

#
# FSL installation
cd
scp ycobigo@172.17.42.1:~ycobigo/Docker/images_neuroimaging/fslinstaller.py .
export SHELL=/bin/bash
python fslinstaller.py
Where would you like to install FSL? [/usr/local]: /mnt/neuroimaging

#
# VTK and ITK and ANTs
# VTK
git clone http://vtk.org/VTK.git
cd VTK 
git checkout v5.10.1
mkdir build && cd build
cmake \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_C_FLAGS=-DGLX_GLXEXT_LEGACY \
      -DCMAKE_CXX_FLAGS=-DGLX_GLXEXT_LEGACY \
      -D BUILD_SHARED_LIBS=OFF \
      -DCMAKE_INSTALL_PREFIX=/mnt/neuroimaging/install ..
make && make install

# ITK
git clone http://itk.org/ITK.git
cd ITK
git checkout v4.9rc03
mkdir build && cd build
cmake  \
       -D CMAKE_BUILD_TYPE:STRING=RELEASE \
       -D BUILD_SHARED_LIBS=OFF \
       -D ITK_DYNAMIC_LOADING=OFF \
       -D CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE \
       -D ITKV3_COMPATIBILITY=ON \
       -D ITK_LEGACY_REMOVE=OFF \
       -D Module_ITKVtkGlue:BOOL=ON \
       -D VTK_DIR:PATH=/mnt/neuroimaging/install/lib/vtk-5.10/ \
       -D CMAKE_INSTALL_PREFIX:PATH=/mnt/neuroimaging/install ..
make && make install
# ANTs
!!!!!!!!! tester install + prendre un tag !!!!!!!!!!
cd /mnt/neuroimaging/
git clone https://github.com/stnava/ANTs
cd ANTs
git checkout v2.1.0rc3
mkdir install && cd install
cmake  \
       -D CMAKE_BUILD_TYPE:STRING=Release \
       -D BUILD_SHARED_LIBS:BOOL=ON \
       -D CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE ..
make

#
# DTI_TK
decompress dtitk-2.3.1-Linux-x86_64.tar.gz in /mnt/neuroimaging/



#
# Dlib Eigen 
wget http://bitbucket.org/eigen/eigen/get/3.2.8.tar.gz
mv 3.2.8.tar.gz Eigen-3.2.8.tar.gz
move untar directory in /mnt/neuroimaging/Eigen-3

#
# MRtrix & Qt
Installation d'un nouveau QT:

git clone https://github.com/MRtrix3/mrtrix3
cd mrtrix3
git checkout 0.3.14

# new links have to be done:
ln -s /usr/bin/moc-qt5 /usr/bin/moc
ln -s /usr/bin/qmake-qt5 /usr/bin/qmake

EIGEN_CFLAGS="-isystem /mnt/neuroimaging/Eigen-3/" ./configure
./build



########
# PATH #
########
# Local
export FSLDIR=/mnt/neuroimaging/fsl/
export ANTSPATH=/mnt/neuroimaging/ANTs/install/bin
export ANTS=/mnt/neuroimaging/ANTs/
export DTITK_ROOT=/mnt/neuroimaging/dtitk-2.3.1-Linux-x86_64
export DTITK_SUIT=$DTITK_ROOT/bin:$DTITK_ROOT/scripts:$DTITK_ROOT/utilities
export MRTRIX3=/mnt/neuroimaging/mrtrix3/release
export MATLAB=/mnt/neuroimaging/MATLAB/R2014b/
export MRICRON=/mnt/neuroimaging/neuroimaging_CentOS7/mricron_lx
#
export PATH=$PATH:/mnt/neuroimaging/install/bin:$FSLDIR/bin:$ANTSPATH:$ANTS/Scripts:$DTITK_SUIT:$MRTRIX3/bin:$MATLAB/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/mnt/neuroimaging/install/lib:$FSLDIR/lib:$ANTS/install/lib:$DTITK_ROOT/lib:$MRTRIX3/lib:$MATLAB/lib
source /mnt/neuroimaging/fsl//etc/fslconf/fsl.sh

# Instance
export FSLDIR=/mnt/neuroimaging/fsl/
export ANTSPATH=/mnt/neuroimaging/ANTs/install/bin/
export ANTS=/mnt/neuroimaging/ANTs/
export DTITK_ROOT=/mnt/neuroimaging/dtitk-2.3.1-Linux-x86_64/
export DTITK_SUIT=$DTITK_ROOT/bin:$DTITK_ROOT/scripts:$DTITK_ROOT/utilities/
export MRTRIX3=/mnt/neuroimaging/mrtrix3/release/
export MATLAB=/usr/local/MATLAB/R2014b/
export MRICRON=/mnt/neuroimaging/mricron_lx/
#
export PATH=$PATH:/mnt/neuroimaging/install/bin:$FSLDIR/bin:$ANTSPATH:$ANTS/Scripts:$DTITK_SUIT:$MRTRIX3/bin:$MATLAB/bin:$MRICRON/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/mnt/neuroimaging/install/lib:$FSLDIR/lib:$ANTS/install/lib:$DTITK_ROOT/lib:$MRTRIX3/lib:$MATLAB/lib
source /mnt/neuroimaging/fsl//etc/fslconf/fsl.sh
